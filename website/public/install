#!/usr/bin/env bash
set -e

# Smith installer script
# Usage: curl -fsSL https://agentsmith.sh/install | bash

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Detect OS and architecture
OS="$(uname -s)"
ARCH="$(uname -m)"

# Normalize OS
case "$OS" in
  Linux*)     OS="linux";;
  Darwin*)    OS="darwin";;
  *)          echo -e "${RED}Unsupported operating system: $OS${NC}"; exit 1;;
esac

# Normalize architecture
case "$ARCH" in
  x86_64)     ARCH="amd64";;
  aarch64)    ARCH="arm64";;
  arm64)      ARCH="arm64";;
  *)          echo -e "${RED}Unsupported architecture: $ARCH${NC}"; exit 1;;
esac

# Installation directory
INSTALL_DIR="${INSTALL_DIR:-$HOME/.local/bin}"

# GitHub repository
REPO="speier/smith"

echo -e "${GREEN}Installing Smith...${NC}"
echo "OS: $OS"
echo "Architecture: $ARCH"
echo "Install directory: $INSTALL_DIR"
echo ""

# Create install directory if it doesn't exist
mkdir -p "$INSTALL_DIR"

# Get latest release version
echo "Fetching latest release..."
LATEST_VERSION=$(curl -fsSL "https://api.github.com/repos/$REPO/releases/latest" | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/')

if [ -z "$LATEST_VERSION" ]; then
  echo -e "${YELLOW}No releases found. Installing from source...${NC}"
  
  # Check if Go is installed
  if ! command -v go &> /dev/null; then
    echo -e "${RED}Go is not installed. Please install Go from https://go.dev${NC}"
    exit 1
  fi
  
  # Install from source
  echo "Installing smith from source..."
  go install "github.com/$REPO@latest"
  
  echo -e "${GREEN}✓ Smith installed successfully!${NC}"
  echo ""
  echo "Run 'smith' to get started."
  exit 0
fi

# Download URL
BINARY_NAME="smith_${OS}_${ARCH}"
if [ "$OS" = "linux" ] && [ "$ARCH" = "amd64" ]; then
  BINARY_NAME="smith_linux_x86_64"
elif [ "$OS" = "darwin" ] && [ "$ARCH" = "amd64" ]; then
  BINARY_NAME="smith_darwin_x86_64"
fi

DOWNLOAD_URL="https://github.com/$REPO/releases/download/$LATEST_VERSION/${BINARY_NAME}.tar.gz"

echo "Downloading Smith $LATEST_VERSION..."
echo "URL: $DOWNLOAD_URL"

# Download and extract binary
TEMP_DIR=$(mktemp -d)
if ! curl -fsSL "$DOWNLOAD_URL" -o "$TEMP_DIR/smith.tar.gz"; then
  echo -e "${RED}Failed to download binary. Installing from source instead...${NC}"
  
  # Check if Go is installed
  if ! command -v go &> /dev/null; then
    echo -e "${RED}Go is not installed. Please install Go from https://go.dev${NC}"
    exit 1
  fi
  
  # Install from source
  echo "Installing smith from source..."
  go install "github.com/$REPO@latest"
  
  echo -e "${GREEN}✓ Smith installed successfully!${NC}"
  echo ""
  echo "Run 'smith' to get started."
  exit 0
fi

# Extract binary
tar -xzf "$TEMP_DIR/smith.tar.gz" -C "$TEMP_DIR"
mv "$TEMP_DIR/smith" "$INSTALL_DIR/smith"
rm -rf "$TEMP_DIR"

# Make executable
chmod +x "$INSTALL_DIR/smith"

# Verify installation
if [ -x "$INSTALL_DIR/smith" ]; then
  echo -e "${GREEN}✓ Smith installed successfully!${NC}"
  echo ""
  
  # Check if install directory is in PATH
  case ":$PATH:" in
    *":$INSTALL_DIR:"*) 
      echo "Run 'smith' to get started."
      ;;
    *)
      echo -e "${YELLOW}Note: $INSTALL_DIR is not in your PATH${NC}"
      echo "Add this to your ~/.bashrc, ~/.zshrc, or ~/.config/fish/config.fish:"
      echo ""
      echo "  export PATH=\"\$PATH:$INSTALL_DIR\""
      echo ""
      echo "Then run 'smith' to get started."
      ;;
  esac
else
  echo -e "${RED}Installation failed${NC}"
  exit 1
fi
